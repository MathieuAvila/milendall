---
name: "Build, Analyze, Test"

on:
  push:
    branches: [main]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]
  schedule:
    - cron: '30 14 * * 4'

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Build
        run: |
          sudo apt update
          sudo apt install -y clang-11 nlohmann-json3-dev libboost-all-dev libspdlog-dev libspdlog1 libglm-dev libfreeimageplus-dev googletest libgmock-dev libgl-dev libopengl-dev libglew-dev libglfw3-dev libglfw3 libfreetype-dev libfreetype6-dev liblua5.1-dev ninja-build
          cmake -G Ninja -S $PWD -B $PWD/build
          cd $PWD/build
          ninja all

      - name: Tar files
        run: tar -cvf build.tar .

      - name: Saves build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build.tar

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  test:
    needs: build
    name: Run Tests and push results
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build
      - name: Untar
        run: tar xvf build.tar

      - name: Setup python
        uses: actions/setup-python@v2
        if: contains(matrix.os, 'ubuntu')
        with:
          python-version: 3.10

      - name: Run Pytest
        continue-on-error: true
        run: |
          sudo pip install pytest munch jsonmerge json5
          export PYTHONPATH=$PYTHONPATH:$PWD/generator/pygenerator/src:$PWD/generator/pygenerator/test/ ; ( cd ./generator/pygenerator/test ;  pytest -s . --junit-xml=../../../build/python-test.xml ; echo $? > ../../../pytest.result ; echo continue)

      - name: Run GTest
        continue-on-error: true
        run: |
          sudo apt update
          sudo apt install -y cmake nlohmann-json3-dev libboost-all-dev libspdlog-dev libspdlog1 libglm-dev libfreeimageplus-dev googletest libgmock-dev libgl-dev libopengl-dev libglew-dev libglfw3-dev libglfw3 libfreetype-dev libfreetype6-dev liblua5.1-dev
          cd ./build
          ctest -C Debug --output-on-failure --verbose --output-junit test_result.xml
          echo $? > ../gtest.result
          echo continue

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          files: "./build/*.xml"

      - name: Check output
        if: always()
        run: |
          gtest=$(cat pytest.result)
          pytest=$(cat pytest.result)
          rtest=$(( gtest + pytest))
          echo "pytest: $pytest"
          echo "gtest: $gtest"
          echo "rtest: $rtest"
          exit $rtest
