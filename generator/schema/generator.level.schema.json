{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://incoherent.com/schemas/level.json",

    "properties": {
        "name": { "$ref": "#/definitions/name" },
        "$schema": {
            "type": "string",
            "description": "Link to this schema"
        },
        "game_type": {
            "type" : "object",
            "description": "Allowed game types",
            "properties": {
                "single_mode" : {
                    "type": "object",
                    "description": "For single player mode",
                    "properties": {
                        "execution_time" : {
                            "type": "number",
                            "description": "Allowed execution time"
                        },
                        "entry_point_room" :  {
                            "type": "string",
                            "description": "Room where player is spawned"
                        },
                        "end_point_room" :  {
                            "type": "string",
                            "description": "Room where player has won"
                        },
                        "entry_point_position" :  {
                            "type": "array",
                            "description": "Position where player is spawned",
                            "items": {
                                "type": "number",
                                "maxItems": 3,
                                "minItems": 3
                            }
                        }
                    },
                    "required": [
                        "execution_time",
                        "entry_point_room",
                        "end_point_room"
                    ],
                    "additionalProperties": false
                }
            }
        },

        "section": {
            "type": "string",
            "description": "Section ID to which it belongs"
        },

        "gates": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "gate_id": {
                        "type": "string",
                        "description": "ID of the gate"
                    },
                    "structure_class": {
                        "type": "string",
                        "description": "The general class name of the structure. Example 'rectangular'"
                    },
                    "dressing_class": {
                        "type": "string",
                        "description": "The general class name of the dressing. Example 'raw'"
                    },
                    "structure_parameters" : { "type": "object", "description": "general parameters at instantiation. Content depends on class" },
                    "structure_private" : { "type": "object", "description": "general parameters at instantiation. Content depends on class" },
                    "dressing_parameters" : { "type": "object", "description": "general parameters at instantiation. Content depends on class" },
                    "dressing_private" :  { "type": "object", "description": "private parameters at instantiation. Content depends on class" },
                    "connect" :  {
                        "type": "array",
                        "description": "List of rooms that are connected by this gates. Must be two !",
                        "minimum": 2,
                        "maximum": 2
                    },
                    "accessible":  {
                        "type": "string",
                        "description": "Declares if objects can pass through initially. Defaults to both.",
                        "enum": ["from-to", "to-from", "both"]
                    },
                    "visible":  {
                        "type": "string",
                        "description": "Declares if it is visually detectable. Defaults to both.",
                        "enum": ["from-to", "to-from", "both"]
                    },
                    "see_through":  {
                        "type": "string",
                        "description": "Declares if is possible to see through it. Defaults to both.",
                        "enum": ["from-to", "to-from", "both"]
                    },
                    "scale" : {
                        "type": "number",
                        "description": "Change of scale when going forward; Reverse in the opposite direction."
                    },
                    "events" : {
                        "type": "array",
                        "description": "List of events that this gate reacts upon, and associated actions",
                        "items": {
                            "type": "object",
                            "properties" : {
                                "action": {
                                    "type": "string",
                                    "description": "On action amongst: open (can go through), close (cannot go through), visible (can see through), invisible (cannot see through), accessible, inaccessible"
                                },
                                "direction" : {
                                    "type": "string",
                                    "description": "Which direction is changed. Defaults to both."
                                },
                                "on_trigger" : {
                                    "type": "string",
                                    "description": "The trigger name that makes this action happen"
                                },
                                "on_property" : {
                                    "type": "string",
                                    "description": "Which characteristic is changed: visible, accessible, see_thourgh"
                                },
                                "to_value" : {
                                    "type": "string",
                                    "description": "To which value it is changed. Can be true,false,switch"
                                }
                            },
                            "required": [
                                "action", "on_trigger", "on_property", "to_value"
                            ],
                            "additionalProperties": false
                        }
                    }
                },
                "additionalProperties": false,
                "required": [
                    "gate_id",
                    "connect"
                ]
            }
        },
        "rooms": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "room_id": {
                        "type": "string",
                        "description": "Section name to which it belongs"
                    },
                    "name": { "$ref": "#/definitions/name" },
                    "structure_class": {
                        "type": "string",
                        "description": "The general class name of the structure. Example 'rectangular'"
                    },
                    "dressing_class": {
                        "type": "string",
                        "description": "The general class name of the dressing. Example 'raw'"
                    },
                    "structure_parameters" : { "type": "object", "description": "general parameters at instantiation. Content depends on class" },
                    "structure_private" : { "type": "object", "description": "general parameters at instantiation. Content depends on class" },
                    "dressing_parameters" : { "type": "object", "description": "general parameters at instantiation. Content depends on class" },
                    "dressing_private" :  { "type": "object", "description": "private parameters at instantiation. Content depends on class" },

                    "triggers" : {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Trigger definition",
                            "properties": {
                                "trigger_id" : {
                                    "type": "string",
                                    "description": "Unique ID"
                                },
                                "type" : {
                                    "type": "string",
                                    "description": "trigger type. If undefined, room is free to choose what best suits it.",
                                    "enum": ["walk-on", "hidden-walk-on", "button"]
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "trigger_id",
                                "type"
                            ]
                        }
                     }
                 },
                "additionalProperties": false,
                "required": [
                    "room_id",
                    "name"
                ]
            }
        }
    },
    "required": [
        "name",
        "game_type",
        "section",
        "rooms",
        "gates"
    ],
    "additionalProperties": false,

    "definitions": {
        "name": {
            "type": "array",
            "items": {
                "type": "object",
                "description": "A name in one language",
                "properties": {
                    "lang" : {
                        "type": "string",
                        "description": "The language. Must be unique."
                    },
                    "value" : {
                        "type": "string",
                        "description": "Name in that language"
                    }
                }
            },
            "description": "A name in multiple languages. Defaults to 'en'"
        }
    }
}

